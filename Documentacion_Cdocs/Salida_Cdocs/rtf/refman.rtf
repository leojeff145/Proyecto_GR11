{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Arbol de Busqueda Ternario  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 \par
}}Arbol de Busqueda Ternario}
{\comment Generado por doxygen 1.9.5.}
{\creatim \yr2023\mo1\dy20\hr6\min46\sec9}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Arbol de Busqueda Ternario}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Versi\'F3n 1\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Viernes, 20 de Enero de 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Tabla de contenidos\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indice jer\'E1rquico\par \pard\plain 
{\tc \v Indice jer\'E1rquico}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Jerarqu\'EDa de la clase\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta lista de herencias esta ordenada aproximadamente por orden alfab\'E9tico:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ArbolBT< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ArbolTernarioBusqueda\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Ayuda\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Console\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GestorAplicacion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Menu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MenuOption\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MenuOptionArgumentBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MenuOptionArgument< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
MenuOptionArguments\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
NodoArbolBinario< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
NodoBasico\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
NodoTernario\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Validaciones\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice de clases\par \pard\plain 
{\tc \v \'CDndice de clases}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de clases\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de las clases, estructuras, uniones e interfaces con una breve descripci\'F3n:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b ArbolBT< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ArbolTernarioBusqueda} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Ayuda} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Console} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GestorAplicacion} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Menu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MenuOption} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MenuOptionArgument< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MenuOptionArgumentBase} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MenuOptionArguments} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NodoArbolBinario< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NodoBasico} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NodoTernario} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Validaciones} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indice de archivos\par \pard\plain 
{\tc \v Indice de archivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de archivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de todos los archivos con descripciones breves:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b ArbolTernarioBusqueda.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b Ayuda.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b GestorAplicacion.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b GestorAplicacion.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b Menu.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b Menu.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b MenuOpciones.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b MenuOpciones.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b NodoArbolBinario.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b NodoBasico.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b NodoBasico.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b NodoTernario.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b NodoTernario.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b Validaciones.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentaci\'F3n de las clases{\tc \v Documentaci\'F3n de las clases}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la plantilla de la Clase ArbolBT< T >\par \pard\plain 
{\tc\tcl2 \v ArbolBT< T >}
{\xe \v ArbolBT< T >}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\par
{
{\f2 #include <NodoArbolBinario.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::list< T * >(T::* {\b hijoGetterFcn}) (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::string(T::* {\b datoGetterFcn}) (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArbolBT} (T *head, {\b hijoGetterFcn} f1, {\b datoGetterFcn} f2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de los 'Typedef' miembros de la clase\par
\pard\plain 
{\xe \v datoGetterFcn\:ArbolBT< T >}
{\xe \v ArbolBT< T >\:datoGetterFcn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > typedef std::string(T::* {\b ArbolBT}< T >::datoGetterFcn) (void)}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hijoGetterFcn\:ArbolBT< T >}
{\xe \v ArbolBT< T >\:hijoGetterFcn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > typedef std::list< T * >(T::* {\b ArbolBT}< T >::hijoGetterFcn) (void)}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v ArbolBT\:ArbolBT< T >}
{\xe \v ArbolBT< T >\:ArbolBT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\b ArbolBT}< T >{\b ::ArbolBT} (T *  {\i head}, {\b hijoGetterFcn}  {\i f1}, {\b datoGetterFcn}  {\i f2})}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v print\:ArbolBT< T >}
{\xe \v ArbolBT< T >\:print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > void {\b ArbolBT}< T >::print}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir del siguiente fichero:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b NodoArbolBinario.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase ArbolTernarioBusqueda\par \pard\plain 
{\tc\tcl2 \v ArbolTernarioBusqueda}
{\xe \v ArbolTernarioBusqueda}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par
{
{\f2 #include <ArbolTernarioBusqueda.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insert} (std::string value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b remove} (std::string value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodoTernario} * {\b find} (std::string value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b traverse} (std::function< void(char value)> cb)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write} (std::ostream &out)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodoTernario} * {\b read} (std::string filename)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v find\:ArbolTernarioBusqueda}
{\xe \v ArbolTernarioBusqueda\:find}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodoTernario} * ArbolTernarioBusqueda::find (std::string  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v insert\:ArbolTernarioBusqueda}
{\xe \v ArbolTernarioBusqueda\:insert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ArbolTernarioBusqueda::insert (std::string  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print\:ArbolTernarioBusqueda}
{\xe \v ArbolTernarioBusqueda\:print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ArbolTernarioBusqueda::print (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v read\:ArbolTernarioBusqueda}
{\xe \v ArbolTernarioBusqueda\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodoTernario} * ArbolTernarioBusqueda::read (std::string  {\i filename}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v remove\:ArbolTernarioBusqueda}
{\xe \v ArbolTernarioBusqueda\:remove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ArbolTernarioBusqueda::remove (std::string  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v traverse\:ArbolTernarioBusqueda}
{\xe \v ArbolTernarioBusqueda\:traverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ArbolTernarioBusqueda::traverse (std::function< void(char value)>  {\i cb}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write\:ArbolTernarioBusqueda}
{\xe \v ArbolTernarioBusqueda\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ArbolTernarioBusqueda::write (std::ostream &  {\i out}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir del siguiente fichero:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b ArbolTernarioBusqueda.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase Ayuda\par \pard\plain 
{\tc\tcl2 \v Ayuda}
{\xe \v Ayuda}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
{
{\f2 #include <Ayuda.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b uppercase} (std::string str)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v uppercase\:Ayuda}
{\xe \v Ayuda\:uppercase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Ayuda::uppercase (std::string  {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir del siguiente fichero:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b Ayuda.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase Console\par \pard\plain 
{\tc\tcl2 \v Console}
{\xe \v Console}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
{
{\f2 #include <Menu.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Console} ({\b Console} const &)=delete\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Console} & {\b operator=} ({\b Console} const &)=delete\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print} (std::string text, COORD coord)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear_line} (short y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear_screen} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear_area} (SMALL_RECT area)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_cursor_position} (COORD coord)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
COORD {\b get_console_size} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Console} & {\b get} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v Console\:Console}
{\xe \v Console\:Console}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Console::Console ({\b Console} const & ){\f2 [delete]}}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v clear_area\:Console}
{\xe \v Console\:clear_area}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Console::clear_area (SMALL_RECT  {\i area})}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clear_line\:Console}
{\xe \v Console\:clear_line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Console::clear_line (short  {\i y})}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clear_screen\:Console}
{\xe \v Console\:clear_screen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Console::clear_screen ()}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get\:Console}
{\xe \v Console\:get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Console} & Console::get (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_console_size\:Console}
{\xe \v Console\:get_console_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
COORD Console::get_console_size ()}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator=\:Console}
{\xe \v Console\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Console} & Console::operator= ({\b Console} const & ){\f2 [delete]}}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print\:Console}
{\xe \v Console\:print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Console::print (std::string  {\i text}, COORD  {\i coord})}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v set_cursor_position\:Console}
{\xe \v Console\:set_cursor_position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Console::set_cursor_position (COORD  {\i coord})}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir de los siguientes ficheros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b Menu.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b Menu.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase GestorAplicacion\par \pard\plain 
{\tc\tcl2 \v GestorAplicacion}
{\xe \v GestorAplicacion}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
{
{\f2 #include <GestorAplicacion.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GestorAplicacion} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b correr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menu_opcion_arbol} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b iniciar} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v GestorAplicacion\:GestorAplicacion}
{\xe \v GestorAplicacion\:GestorAplicacion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GestorAplicacion::GestorAplicacion (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v correr\:GestorAplicacion}
{\xe \v GestorAplicacion\:correr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GestorAplicacion::correr ()}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v iniciar\:GestorAplicacion}
{\xe \v GestorAplicacion\:iniciar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GestorAplicacion::iniciar (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v menu_opcion_arbol\:GestorAplicacion}
{\xe \v GestorAplicacion\:menu_opcion_arbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GestorAplicacion::menu_opcion_arbol ()}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir de los siguientes ficheros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b GestorAplicacion.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b GestorAplicacion.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase Menu\par \pard\plain 
{\tc\tcl2 \v Menu}
{\xe \v Menu}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
{
{\f2 #include <Menu.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Menu} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Menu} (std::string title)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add_option} ({\b MenuOption} option)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
agrega una opcion al menu }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b remove_option} (int index)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
remueve una opcion del menu }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b display} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
muestra el menu }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b stop} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
detiene el menu }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_running} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
verifica si el menu esta detenido. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuOption} {\b opcion_salir} (std::string label="Salir", bool pausar=false)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v Menu\:Menu}
{\xe \v Menu\:Menu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Menu::Menu ()}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Menu\:Menu}
{\xe \v Menu\:Menu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Menu::Menu (std::string  {\i title})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v add_option\:Menu}
{\xe \v Menu\:add_option}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Menu::add_option ({\b MenuOption}  {\i option})}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
agrega una opcion al menu }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i option} \cell }{\cell }
{\row }
}
}}
{\xe \v display\:Menu}
{\xe \v Menu\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Menu::display ()}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
muestra el menu }}\par
}
{\xe \v is_running\:Menu}
{\xe \v Menu\:is_running}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Menu::is_running ()}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
verifica si el menu esta detenido. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true si esta corriendo, caso contrario devuelve true \par
}}}}
{\xe \v opcion_salir\:Menu}
{\xe \v Menu\:opcion_salir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MenuOption} Menu::opcion_salir (std::string  {\i label} = {\f2 "Salir"}, bool  {\i pausar} = {\f2 false}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v remove_option\:Menu}
{\xe \v Menu\:remove_option}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Menu::remove_option (int  {\i index})}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
remueve una opcion del menu }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{indice de la opcion a eliminar \cell }
{\row }
}
}}
{\xe \v stop\:Menu}
{\xe \v Menu\:stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Menu::stop ()}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
detiene el menu }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir de los siguientes ficheros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b Menu.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b Menu.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase MenuOption\par \pard\plain 
{\tc\tcl2 \v MenuOption}
{\xe \v MenuOption}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
{
{\f2 #include <MenuOpciones.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuOption} (std::string label, {\b MenuOptionCallback} callback)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuOption} (std::string label, {\b MenuOptionCallback} callback, bool wait_after_exec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuOption} (std::string label, {\b MenuOptionCallback} callback, {\b MenuOptionArguments} arguments)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuOption} (std::string label, {\b MenuOptionCallback} callback, {\b MenuOptionArguments} arguments, bool wait_after_exec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuOption} (std::string label, {\b MenuOptionCallback2} callback)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuOption} (std::string label, {\b MenuOptionCallback2} callback, bool wait_after_exec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuOption} (std::string label, {\b MenuOptionCallback2} callback, {\b MenuOptionArguments} arguments)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuOption} (std::string label, {\b MenuOptionCallback2} callback, {\b MenuOptionArguments} arguments, bool wait_after_exec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b visible} (bool visible)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b visible} (std::function< bool()> visible_cb)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b get_label} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
obtiene la etiqueta de la opcion del menu }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b execute} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ejecuta la accion de esta opcion del menu }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b should_wait} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
verifica si esta opcion deberia esperar al usuario }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuOptionArguments} & {\b get_args} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
obtiene todos los argumentos de esta opcion }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v MenuOption\:MenuOption}
{\xe \v MenuOption\:MenuOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MenuOption::MenuOption (std::string  {\i label}, {\b MenuOptionCallback}  {\i callback})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MenuOption\:MenuOption}
{\xe \v MenuOption\:MenuOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MenuOption::MenuOption (std::string  {\i label}, {\b MenuOptionCallback}  {\i callback}, bool  {\i wait_after_exec})}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MenuOption\:MenuOption}
{\xe \v MenuOption\:MenuOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MenuOption::MenuOption (std::string  {\i label}, {\b MenuOptionCallback}  {\i callback}, {\b MenuOptionArguments}  {\i arguments})}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MenuOption\:MenuOption}
{\xe \v MenuOption\:MenuOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MenuOption::MenuOption (std::string  {\i label}, {\b MenuOptionCallback}  {\i callback}, {\b MenuOptionArguments}  {\i arguments}, bool  {\i wait_after_exec})}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MenuOption\:MenuOption}
{\xe \v MenuOption\:MenuOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MenuOption::MenuOption (std::string  {\i label}, {\b MenuOptionCallback2}  {\i callback})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MenuOption\:MenuOption}
{\xe \v MenuOption\:MenuOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MenuOption::MenuOption (std::string  {\i label}, {\b MenuOptionCallback2}  {\i callback}, bool  {\i wait_after_exec})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MenuOption\:MenuOption}
{\xe \v MenuOption\:MenuOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MenuOption::MenuOption (std::string  {\i label}, {\b MenuOptionCallback2}  {\i callback}, {\b MenuOptionArguments}  {\i arguments})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MenuOption\:MenuOption}
{\xe \v MenuOption\:MenuOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MenuOption::MenuOption (std::string  {\i label}, {\b MenuOptionCallback2}  {\i callback}, {\b MenuOptionArguments}  {\i arguments}, bool  {\i wait_after_exec})}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v execute\:MenuOption}
{\xe \v MenuOption\:execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MenuOption::execute ()}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ejecuta la accion de esta opcion del menu }}\par
}
{\xe \v get_args\:MenuOption}
{\xe \v MenuOption\:get_args}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MenuOptionArguments} & MenuOption::get_args ()}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
obtiene todos los argumentos de esta opcion }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}}
{\xe \v get_label\:MenuOption}
{\xe \v MenuOption\:get_label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string MenuOption::get_label ()}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
obtiene la etiqueta de la opcion del menu }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}}
{\xe \v should_wait\:MenuOption}
{\xe \v MenuOption\:should_wait}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MenuOption::should_wait ()}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
verifica si esta opcion deberia esperar al usuario }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true si deberia esperar, caso contrario devuelve false \par
}}}}
{\xe \v visible\:MenuOption}
{\xe \v MenuOption\:visible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MenuOption::visible ()}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v visible\:MenuOption}
{\xe \v MenuOption\:visible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MenuOption::visible (bool  {\i visible})}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v visible\:MenuOption}
{\xe \v MenuOption\:visible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MenuOption::visible (std::function< bool()>  {\i visible_cb})}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir de los siguientes ficheros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b MenuOpciones.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b MenuOpciones.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la plantilla de la Clase MenuOptionArgument< T >\par \pard\plain 
{\tc\tcl2 \v MenuOptionArgument< T >}
{\xe \v MenuOptionArgument< T >}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
{
{\f2 #include <MenuOpciones.h>}}\par
Diagrama de herencias de MenuOptionArgument< T >{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_menu_option_argument.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T {\b Type}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuOptionArgument} (const {\b Type} &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Type} {\b get_value} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_value} ({\b Type} value)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de los 'Typedef' miembros de la clase\par
\pard\plain 
{\xe \v Type\:MenuOptionArgument< T >}
{\xe \v MenuOptionArgument< T >\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > typedef T {\b MenuOptionArgument}< T >::Type}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v MenuOptionArgument\:MenuOptionArgument< T >}
{\xe \v MenuOptionArgument< T >\:MenuOptionArgument}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b MenuOptionArgument}< T >{\b ::MenuOptionArgument} (const {\b Type} &  {\i value}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v get_value\:MenuOptionArgument< T >}
{\xe \v MenuOptionArgument< T >\:get_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T {\b MenuOptionArgument}< T >::get_value}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v set_value\:MenuOptionArgument< T >}
{\xe \v MenuOptionArgument< T >\:set_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b MenuOptionArgument}< T >::set_value ({\b Type}  {\i value})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir del siguiente fichero:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b MenuOpciones.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase MenuOptionArgumentBase\par \pard\plain 
{\tc\tcl2 \v MenuOptionArgumentBase}
{\xe \v MenuOptionArgumentBase}
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\par
{
{\f2 #include <MenuOpciones.h>}}\par
Diagrama de herencias de MenuOptionArgumentBase{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_menu_option_argument_base.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~MenuOptionArgumentBase} ()=0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v ~MenuOptionArgumentBase\:MenuOptionArgumentBase}
{\xe \v MenuOptionArgumentBase\:~MenuOptionArgumentBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MenuOptionArgumentBase::~MenuOptionArgumentBase (){\f2 [inline]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir del siguiente fichero:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b MenuOpciones.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase MenuOptionArguments\par \pard\plain 
{\tc\tcl2 \v MenuOptionArguments}
{\xe \v MenuOptionArguments}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\par
{
{\f2 #include <MenuOpciones.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuOptionArguments} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b add} (std::string key, {\b MenuOptionArgument}< T > *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
agrega un argumento con clave }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b add} (std::string key, T value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Agrega un argumento con clave y un valor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > T {\b get} (std::string key)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
obtiene un argumento por clave }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b set} (std::string key, T value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
define un argumento por clave y valor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b has} (std::string key)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v MenuOptionArguments\:MenuOptionArguments}
{\xe \v MenuOptionArguments\:MenuOptionArguments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MenuOptionArguments::MenuOptionArguments (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v add\:MenuOptionArguments}
{\xe \v MenuOptionArguments\:add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void MenuOptionArguments::add (std::string  {\i key}, {\b MenuOptionArgument}< T > *  {\i argument})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
agrega un argumento con clave }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E1metros del template\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{tipo del argumento \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argument} \cell }{\cell }
{\row }
}
}}
{\xe \v add\:MenuOptionArguments}
{\xe \v MenuOptionArguments\:add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void MenuOptionArguments::add (std::string  {\i key}, T  {\i value})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Agrega un argumento con clave y un valor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E1metros del template\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{tipo de dato del argumento \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{clave del argumento \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{\cell }
{\row }
}
}}
{\xe \v get\:MenuOptionArguments}
{\xe \v MenuOptionArguments\:get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T MenuOptionArguments::get (std::string  {\i key})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
obtiene un argumento por clave }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E1metros del template\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{tipo de dato del argumento \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{clave del argumento a obtener \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Devuelve\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}}
{\xe \v has\:MenuOptionArguments}
{\xe \v MenuOptionArguments\:has}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MenuOptionArguments::has (std::string  {\i key}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v set\:MenuOptionArguments}
{\xe \v MenuOptionArguments\:set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void MenuOptionArguments::set (std::string  {\i key}, T  {\i value})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
define un argumento por clave y valor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E1metros del template\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{tipo de dato del argumento \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E1metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{clave del argumento \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{valor del argumento \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir del siguiente fichero:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b MenuOpciones.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la plantilla de la Clase NodoArbolBinario< T >\par \pard\plain 
{\tc\tcl2 \v NodoArbolBinario< T >}
{\xe \v NodoArbolBinario< T >}
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
{
{\f2 #include <NodoArbolBinario.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::list< T * >(T::* {\b hijoGetterFcn}) (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::string(T::* {\b datoGetterFcn}) (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodoArbolBinario} (T *node)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~NodoArbolBinario} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirArbol} (std::shared_ptr< {\b NodoArbolBinario}< T > > thisHead)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b inicializarClase} ({\b hijoGetterFcn} f1, {\b datoGetterFcn} f2)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de los 'Typedef' miembros de la clase\par
\pard\plain 
{\xe \v datoGetterFcn\:NodoArbolBinario< T >}
{\xe \v NodoArbolBinario< T >\:datoGetterFcn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > typedef std::string(T::* {\b NodoArbolBinario}< T >::datoGetterFcn) (void)}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hijoGetterFcn\:NodoArbolBinario< T >}
{\xe \v NodoArbolBinario< T >\:hijoGetterFcn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > typedef std::list< T * >(T::* {\b NodoArbolBinario}< T >::hijoGetterFcn) (void)}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v NodoArbolBinario\:NodoArbolBinario< T >}
{\xe \v NodoArbolBinario< T >\:NodoArbolBinario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\b NodoArbolBinario}< T >{\b ::NodoArbolBinario} (T *  {\i node})}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~NodoArbolBinario\:NodoArbolBinario< T >}
{\xe \v NodoArbolBinario< T >\:~NodoArbolBinario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\b NodoArbolBinario}< T >::~{\b NodoArbolBinario}{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v imprimirArbol\:NodoArbolBinario< T >}
{\xe \v NodoArbolBinario< T >\:imprimirArbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > void {\b NodoArbolBinario}< T >::imprimirArbol (std::shared_ptr< {\b NodoArbolBinario}< T > >  {\i thisHead})}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inicializarClase\:NodoArbolBinario< T >}
{\xe \v NodoArbolBinario< T >\:inicializarClase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > void {\b NodoArbolBinario}< T >::inicializarClase ({\b hijoGetterFcn}  {\i f1}, {\b datoGetterFcn}  {\i f2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir del siguiente fichero:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b NodoArbolBinario.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase NodoBasico\par \pard\plain 
{\tc\tcl2 \v NodoBasico}
{\xe \v NodoBasico}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
{
{\f2 #include <NodoBasico.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodoBasico} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodoBasico} (std::string dato)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~NodoBasico} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b agregarHijo} ({\b NodoBasico} *nd)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::list< {\b NodoBasico} * > {\b getHijo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getDato} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDato} (std::string data)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPadre} ({\b NodoBasico} *nd)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b _dato}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::list< {\b NodoBasico} * > {\b _hijo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodoBasico} * {\b _padre}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v NodoBasico\:NodoBasico}
{\xe \v NodoBasico\:NodoBasico}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NodoBasico::NodoBasico ()}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NodoBasico\:NodoBasico}
{\xe \v NodoBasico\:NodoBasico}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NodoBasico::NodoBasico (std::string  {\i dato})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~NodoBasico\:NodoBasico}
{\xe \v NodoBasico\:~NodoBasico}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NodoBasico::~NodoBasico (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v agregarHijo\:NodoBasico}
{\xe \v NodoBasico\:agregarHijo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NodoBasico::agregarHijo ({\b NodoBasico} *  {\i nd})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getDato\:NodoBasico}
{\xe \v NodoBasico\:getDato}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string NodoBasico::getDato ()}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getHijo\:NodoBasico}
{\xe \v NodoBasico\:getHijo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::list< {\b NodoBasico} * > NodoBasico::getHijo ()}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setDato\:NodoBasico}
{\xe \v NodoBasico\:setDato}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NodoBasico::setDato (std::string  {\i data})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPadre\:NodoBasico}
{\xe \v NodoBasico\:setPadre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NodoBasico::setPadre ({\b NodoBasico} *  {\i nd}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de los datos miembro\par
\pard\plain 
{\xe \v _dato\:NodoBasico}
{\xe \v NodoBasico\:_dato}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string NodoBasico::_dato{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _hijo\:NodoBasico}
{\xe \v NodoBasico\:_hijo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::list<{\b NodoBasico}*> NodoBasico::_hijo{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _padre\:NodoBasico}
{\xe \v NodoBasico\:_padre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodoBasico}* NodoBasico::_padre{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir de los siguientes ficheros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b NodoBasico.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b NodoBasico.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase NodoTernario\par \pard\plain 
{\tc\tcl2 \v NodoTernario}
{\xe \v NodoTernario}
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\par
{
{\f2 #include <NodoTernario.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodoTernario} (char {\b value})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b value} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodoTernario} *& {\b left} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodoTernario} *& {\b middle} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodoTernario} *& {\b right} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodoTernario} *& {\b parent} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_word} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b value} (char valor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b left} ({\b NodoTernario} *izquierda)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b middle} ({\b NodoTernario} *medio)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b right} ({\b NodoTernario} *derecha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b parent} ({\b NodoTernario} *padre)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b is_word} (bool valor)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n del constructor y destructor\par
\pard\plain 
{\xe \v NodoTernario\:NodoTernario}
{\xe \v NodoTernario\:NodoTernario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NodoTernario::NodoTernario (char  {\i value})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v is_word\:NodoTernario}
{\xe \v NodoTernario\:is_word}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool NodoTernario::is_word ()}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v is_word\:NodoTernario}
{\xe \v NodoTernario\:is_word}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NodoTernario::is_word (bool  {\i valor})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v left\:NodoTernario}
{\xe \v NodoTernario\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodoTernario} *& NodoTernario::left ()}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v left\:NodoTernario}
{\xe \v NodoTernario\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NodoTernario::left ({\b NodoTernario} *  {\i izquierda})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v middle\:NodoTernario}
{\xe \v NodoTernario\:middle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodoTernario} *& NodoTernario::middle ()}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v middle\:NodoTernario}
{\xe \v NodoTernario\:middle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NodoTernario::middle ({\b NodoTernario} *  {\i medio})}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parent\:NodoTernario}
{\xe \v NodoTernario\:parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodoTernario} *& NodoTernario::parent ()}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parent\:NodoTernario}
{\xe \v NodoTernario\:parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NodoTernario::parent ({\b NodoTernario} *  {\i padre})}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v right\:NodoTernario}
{\xe \v NodoTernario\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodoTernario} *& NodoTernario::right ()}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v right\:NodoTernario}
{\xe \v NodoTernario\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NodoTernario::right ({\b NodoTernario} *  {\i derecha})}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value\:NodoTernario}
{\xe \v NodoTernario\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char NodoTernario::value ()}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value\:NodoTernario}
{\xe \v NodoTernario\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NodoTernario::value (char  {\i valor})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir de los siguientes ficheros:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b NodoTernario.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b NodoTernario.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la Clase Validaciones\par \pard\plain 
{\tc\tcl2 \v Validaciones}
{\xe \v Validaciones}
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
\par
{
{\f2 #include <Validaciones.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b es_numerico} (std::string str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::vector< std::string > {\b dividirStr} (std::string str, char delimitador)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b recortar} (const std::string &str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b reducirstr} (const std::string &str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b confirmar} (const std::string pregunta)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b leer_contrase\'F1a} (std::string etique)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b convertirEnEntero} (std::string cadena)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b convertirEnReal} (std::string cadena)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b leerCadenaNumerica} (const std::string mensaje)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b leer_entero} (std::string mensaje, int minimo=INT_MIN, int maximo=INT_MAX)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b leer_flotante} (std::string mensaje, float minimo=FLT_MIN, float maximo=FLT_MAX)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b cedula_valida} (const std::string cedula)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b email_valido} (std::string email)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b leer_con_formato} (std::string mensaje, std::string formato)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b leer_cadena} (std::string mensaje)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b recortar_cadena} (std::string str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::vector< std::vector< std::string > > {\b leer_archivo_datos} (std::string archivo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b guardar_archivo_datos} (std::string archivo, std::vector< std::string > lineas, bool sobreescribir=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b mostrar_archivo} (std::string archivo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones miembro\par
\pard\plain 
{\xe \v cedula_valida\:Validaciones}
{\xe \v Validaciones\:cedula_valida}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Validaciones::cedula_valida (const std::string  {\i cedula}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v confirmar\:Validaciones}
{\xe \v Validaciones\:confirmar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Validaciones::confirmar (const std::string  {\i pregunta}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v convertirEnEntero\:Validaciones}
{\xe \v Validaciones\:convertirEnEntero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Validaciones::convertirEnEntero (std::string  {\i cadena}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v convertirEnReal\:Validaciones}
{\xe \v Validaciones\:convertirEnReal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static double Validaciones::convertirEnReal (std::string  {\i cadena}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dividirStr\:Validaciones}
{\xe \v Validaciones\:dividirStr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::vector< std::string > Validaciones::dividirStr (std::string  {\i str}, char  {\i delimitador}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v email_valido\:Validaciones}
{\xe \v Validaciones\:email_valido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Validaciones::email_valido (std::string  {\i email}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v es_numerico\:Validaciones}
{\xe \v Validaciones\:es_numerico}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Validaciones::es_numerico (std::string  {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v guardar_archivo_datos\:Validaciones}
{\xe \v Validaciones\:guardar_archivo_datos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Validaciones::guardar_archivo_datos (std::string  {\i archivo}, std::vector< std::string >  {\i lineas}, bool  {\i sobreescribir} = {\f2 true}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leer_archivo_datos\:Validaciones}
{\xe \v Validaciones\:leer_archivo_datos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::vector< std::vector< std::string > > Validaciones::leer_archivo_datos (std::string  {\i archivo}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leer_cadena\:Validaciones}
{\xe \v Validaciones\:leer_cadena}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Validaciones::leer_cadena (std::string  {\i mensaje}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leer_con_formato\:Validaciones}
{\xe \v Validaciones\:leer_con_formato}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Validaciones::leer_con_formato (std::string  {\i mensaje}, std::string  {\i formato}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leer_contrase\'F1a\:Validaciones}
{\xe \v Validaciones\:leer_contrase\'F1a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Validaciones::leer_contrase\'F1a (std::string  {\i etique}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leer_entero\:Validaciones}
{\xe \v Validaciones\:leer_entero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Validaciones::leer_entero (std::string  {\i mensaje}, int  {\i minimo} = {\f2 INT_MIN}, int  {\i maximo} = {\f2 INT_MAX}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leer_flotante\:Validaciones}
{\xe \v Validaciones\:leer_flotante}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static float Validaciones::leer_flotante (std::string  {\i mensaje}, float  {\i minimo} = {\f2 FLT_MIN}, float  {\i maximo} = {\f2 FLT_MAX}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leerCadenaNumerica\:Validaciones}
{\xe \v Validaciones\:leerCadenaNumerica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Validaciones::leerCadenaNumerica (const std::string  {\i mensaje}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mostrar_archivo\:Validaciones}
{\xe \v Validaciones\:mostrar_archivo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Validaciones::mostrar_archivo (std::string  {\i archivo}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v recortar\:Validaciones}
{\xe \v Validaciones\:recortar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Validaciones::recortar (const std::string &  {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v recortar_cadena\:Validaciones}
{\xe \v Validaciones\:recortar_cadena}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Validaciones::recortar_cadena (std::string  {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reducirstr\:Validaciones}
{\xe \v Validaciones\:reducirstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Validaciones::reducirstr (const std::string &  {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n para esta clase fue generada a partir del siguiente fichero:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/{\b Validaciones.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentaci\'F3n de archivos{\tc \v Documentaci\'F3n de archivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/ArbolTernarioBusqueda.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/ArbolTernarioBusqueda.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/ArbolTernarioBusqueda.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "NodoTernario.h"}\par
{\f2 #include "Ayuda.h"}\par
{\f2 #include "NodoArbolBinario.h"}\par
{\f2 #include "NodoBasico.h"}\par
{\f2 #include <regex>}\par
{\f2 #include <string>}\par
{\f2 #include <iostream>}\par
{\f2 #include <functional>}\par
{\f2 #include <fstream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ArbolTernarioBusqueda}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ArbolTernarioBusqueda.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/ArbolTernarioBusqueda.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/ArbolTernarioBusqueda.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include "NodoTernario.h"}\par
3 {\cf21 #include "Ayuda.h"}\par
4 {\cf21 #include "NodoArbolBinario.h"}\par
5 {\cf21 #include "NodoBasico.h"}\par
6 {\cf21 #include <regex>}\par
7 {\cf21 #include <string>}\par
8 {\cf21 #include <iostream>}\par
9 {\cf21 #include <functional>}\par
10 {\cf21 #include <fstream>}\par
11 \par
12 {\cf17 class }ArbolTernarioBusqueda \{\par
13 {\cf17 public}:\par
14     {\cf18 void} insert(std::string value);\par
15     {\cf18 void} remove(std::string value);\par
16     NodoTernario* find(std::string value);\par
17     {\cf18 void} print();\par
18     {\cf18 void} traverse(std::function<{\cf18 void}({\cf18 char} value)> cb);\par
19     {\cf18 void} write(std::ostream& out);\par
20     NodoTernario* read(std::string filename);\par
21 \par
22 {\cf17 private}:\par
23     {\cf18 void} write_recursive(NodoTernario* p, std::ostream& out);\par
24     {\cf18 int} read_recursive(NodoTernario*& root, std::ifstream& in);\par
25     {\cf18 void} traverse_recursive(NodoTernario* root, std::function<{\cf18 void}({\cf18 char} value)> cb);\par
26     {\cf18 void} insert_recursive(NodoTernario* tree, std::string value);\par
27     NodoTernario* find_recursive(NodoTernario*& tree, std::string value);\par
28     NodoTernario* remove_recursive(NodoTernario* node, std::string word, {\cf18 int} position);\par
29 \par
30     {\cf18 void} cleanup_delete(NodoTernario* node);\par
31     NodoTernario* create_if_not_extant(NodoTernario* tree, NodoTernario*& child, std::string label);\par
32     {\cf18 void} print_util(NodoTernario* root, {\cf18 char}* buffer, {\cf18 int} depth, NodoBasico* head);\par
33 \par
34     {\cf18 int} count_siblings(NodoTernario* node) \{\par
35         {\cf18 int} count = 0;\par
36 \par
37         {\cf19 if} (node->left() != {\cf17 nullptr}) \{\par
38             count++;\par
39         \}\par
40         {\cf19 if} (node->right() != {\cf17 nullptr}) \{\par
41             count++;\par
42         \}\par
43         {\cf19 if} (node->middle() != {\cf17 nullptr}) \{\par
44             count++;\par
45         \}\par
46         {\cf19 return} count;\par
47     \}\par
48 \par
49     NodoTernario* root_ = {\cf17 nullptr};\par
50 \};\par
51 \par
52 {\cf17 inline} {\cf18 void} ArbolTernarioBusqueda::traverse(std::function<{\cf18 void}({\cf18 char} value)> cb) \{\par
53     traverse_recursive(root_, cb);\par
54 \}\par
55 \par
56 {\cf17 inline} {\cf18 void} ArbolTernarioBusqueda::write(std::ostream& out) \{\par
57     write_recursive(root_, out);\par
58 \}\par
59 \par
60 {\cf17 inline} NodoTernario* ArbolTernarioBusqueda::read(std::string filename) \{\par
61     NodoTernario* root;\par
62     std::ifstream file(filename.c_str());\par
63     read_recursive(root, file);\par
64     root_ = root;\par
65     {\cf19 return} root;\par
66 \}\par
67 \par
68 {\cf17 inline} {\cf18 void} ArbolTernarioBusqueda::write_recursive(NodoTernario* root, std::ostream& out) \{\par
69     {\cf19 if} (root == {\cf17 nullptr}) \{\par
70         out << {\cf22 "null"} << std::endl;\par
71         {\cf19 return};\par
72     \}\par
73 \par
74     out << root->value() << std::endl;\par
75     write_recursive(root->left(), out);\par
76     write_recursive(root->middle(), out);\par
77     write_recursive(root->right(), out);\par
78 \}\par
79 \par
80 {\cf17 inline} {\cf18 int} ArbolTernarioBusqueda::read_recursive(NodoTernario*& root, std::ifstream& in) \{\par
81     std::string line;\par
82     getline(in, line);\par
83 \par
84     {\cf19 if} (line == {\cf22 "null"}) \{\par
85         root = {\cf17 nullptr};\par
86         {\cf19 return} 0;\par
87     \}\par
88 \par
89     root = {\cf17 new} NodoTernario(line[0]);\par
90     read_recursive(root->left(), in);\par
91     read_recursive(root->middle(), in);\par
92     read_recursive(root->right(), in);\par
93 \par
94     {\cf19 return} 0;\par
95 \}\par
96 \par
97 {\cf17 inline} {\cf18 void} ArbolTernarioBusqueda::traverse_recursive(NodoTernario* root, std::function<{\cf18 void}({\cf18 char} value)> cb) \{\par
98     {\cf19 if} (root != {\cf17 nullptr}) \{\par
99         traverse_recursive(root->left(), cb);\par
100         cb(root->value());\par
101         traverse_recursive(root->middle(), cb);\par
102         traverse_recursive(root->right(), cb);\par
103     \}\par
104 \}\par
105 \par
106 {\cf17 inline} {\cf18 void} ArbolTernarioBusqueda::insert(std::string value) \{\par
107     std::string inserted_value = Ayuda::uppercase(value);\par
108     std::regex pattern({\cf22 "[^a-z]"});\par
109     std::smatch sm;\par
110 \par
111     std::regex_replace(inserted_value, pattern, {\cf22 ""});\par
112 \par
113     {\cf19 if} (inserted_value.empty()) \{\par
114         {\cf19 return};\par
115     \}\par
116 \par
117     {\cf19 if} (root_ == {\cf17 nullptr}) \{\par
118         root_ = {\cf17 new} NodoTernario({\cf23 ' '});\par
119     \}\par
120 \par
121     insert_recursive(root_, Ayuda::uppercase(value));\par
122 \}\par
123 \par
124 {\cf17 inline} NodoTernario* ArbolTernarioBusqueda::find(std::string value) \{\par
125     value = Ayuda::uppercase(value);\par
126     std::regex pattern({\cf22 "[^a-z]"});\par
127     std::regex_replace(value, pattern, {\cf22 ""});\par
128     {\cf19 return} find_recursive(root_, value);\par
129 \}\par
130 \par
131 {\cf17 inline} NodoTernario* ArbolTernarioBusqueda::find_recursive(NodoTernario*& tree, std::string value) \{\par
132     {\cf19 if} (tree == {\cf17 nullptr}) \{\par
133         {\cf19 return} {\cf17 nullptr};\par
134     \}\par
135 \par
136     {\cf19 if} (value.length() == 0) \{\par
137         {\cf19 if} (tree->is_word() == {\cf17 true}) \{\par
138             {\cf19 return} tree;\par
139         \} {\cf19 else} \{\par
140             {\cf19 return} {\cf17 nullptr};\par
141         \}\par
142     \} {\cf19 else} \{\par
143         NodoTernario* child = {\cf17 nullptr};\par
144 \par
145         {\cf19 if} (tree->value() == {\cf23 ' '}) \{\par
146             {\cf19 return} {\cf17 nullptr};\par
147         \}\par
148 \par
149         {\cf19 if} (tree->value() == value.at(0)) \{\par
150             value = value.substr(1);\par
151             child = tree->middle();\par
152         \} {\cf19 else} {\cf19 if} (tree->value() > value.at(0)) \{\par
153             child = tree->left();\par
154         \} {\cf19 else} \{\par
155             child = tree->right();\par
156         \}\par
157 \par
158         {\cf19 if} (child != {\cf17 nullptr}) \{\par
159             {\cf20 // ...}\par
160         \} {\cf19 else} \{\par
161             {\cf20 // ...}\par
162         \}\par
163 \par
164         {\cf19 return} find_recursive(child, value);\par
165     \}\par
166 \}\par
167 \par
168 {\cf17 inline} {\cf18 void} ArbolTernarioBusqueda::cleanup_delete(NodoTernario* tree) \{\par
169     {\cf19 if} (tree == {\cf17 nullptr}) \{\par
170         {\cf19 return};\par
171     \} {\cf19 else} {\cf19 if} (tree->middle() == {\cf17 nullptr}) \{\par
172         {\cf19 return};\par
173     \} {\cf19 else} {\cf19 if} (tree->middle() == {\cf17 nullptr} && tree->right() == {\cf17 nullptr} && tree->left() == {\cf17 nullptr} && tree->is_word() == {\cf17 true}) \{\par
174         {\cf19 return};\par
175     \} {\cf19 else} {\cf19 if} (tree->middle() == {\cf17 nullptr} && tree->left() == {\cf17 nullptr} && tree->right() == {\cf17 nullptr}) \{\par
176         {\cf19 if} (tree->parent() == {\cf17 nullptr}) \{\par
177             root_ = {\cf17 nullptr};\par
178         \} {\cf19 else} {\cf19 if} (tree->parent()->left() == tree) \{\par
179             tree->parent()->left({\cf17 nullptr});\par
180         \} {\cf19 else} {\cf19 if} (tree->parent()->right() == tree) \{\par
181             tree->parent()->right({\cf17 nullptr});\par
182         \} {\cf19 else} {\cf19 if} (tree->parent()->middle() == tree) \{\par
183             tree->parent()->middle({\cf17 nullptr});\par
184             {\cf20 // tree->parent()->value(' ');}\par
185         \}\par
186 \par
187         cleanup_delete(tree->parent());\par
188     \} {\cf19 else} {\cf19 if} ((tree->left() == {\cf17 nullptr} && tree->middle() == {\cf17 nullptr}) || (tree->right() == {\cf17 nullptr} && tree->middle() == {\cf17 nullptr})) \{\par
189         NodoTernario* child = {\cf17 nullptr};\par
190 \par
191         {\cf19 if} (tree->left() != {\cf17 nullptr}) \{\par
192             child = tree->left();\par
193         \} {\cf19 else} \{\par
194             child = tree->right();\par
195         \}\par
196 \par
197         {\cf19 if} (tree->parent() == {\cf17 nullptr}) \{\par
198             root_ = child;\par
199         \} {\cf19 else} {\cf19 if} (tree->parent()->left() == tree) \{\par
200             tree->parent()->left(child);\par
201             child->parent(tree->parent());\par
202         \} {\cf19 else} {\cf19 if} (tree->parent()->right() == tree) \{\par
203             tree->parent()->right(child);\par
204             child->parent(tree->parent());\par
205         \} {\cf19 else} {\cf19 if} (tree->parent()->middle() == tree) \{\par
206             child->parent(tree->parent());\par
207             tree->parent()->middle(child);\par
208         \} {\cf19 else} \{\par
209             {\cf20 // ...}\par
210         \}\par
211     \} {\cf19 else} {\cf19 if} (tree->right() != {\cf17 nullptr} && tree->middle() != {\cf17 nullptr} && tree->right() != {\cf17 nullptr}) \{\par
212         NodoTernario* node = tree->left();\par
213         NodoTernario* parent = tree->parent();\par
214 \par
215         {\cf19 while} (node->right() != {\cf17 nullptr}) \{\par
216             node = node->right();\par
217         \}\par
218 \par
219         {\cf19 if} (tree->left() != node) \{\par
220             node->parent()->right(node->left());\par
221 \par
222             {\cf19 if} (node->left() != {\cf17 nullptr}) \{\par
223                 node->left()->parent(node->parent());\par
224             \}\par
225 \par
226             node->right(tree->right());\par
227             node->left(tree->left());\par
228             tree->right()->parent(node);\par
229             tree->left()->parent(node);\par
230         \} {\cf19 else} \{\par
231             node->right(tree->right());\par
232             node->right()->parent(node);\par
233         \}\par
234 \par
235         node->parent(tree->parent());\par
236 \par
237         {\cf19 if} (node->parent() == {\cf17 nullptr}) \{\par
238             root_ = node;\par
239         \} {\cf19 else} \{\par
240             {\cf19 if} (tree->parent()->left() == tree) \{\par
241                 tree->parent()->left(node);\par
242                 node->parent(tree->parent());\par
243             \} {\cf19 else} {\cf19 if} (tree->parent()->right() == tree) \{\par
244                 tree->parent()->right(node);\par
245                 node->parent(tree->parent());\par
246             \} {\cf19 else} {\cf19 if} (tree->parent()->middle() == tree) \{\par
247                 tree->parent()->middle(node);\par
248                 node->parent(tree->parent());\par
249             \}\par
250         \}\par
251     \}\par
252 \}\par
253 \par
254 {\cf17 inline} {\cf18 void} ArbolTernarioBusqueda::remove(std::string value) \{\par
255     {\cf20 /*NodoTernario* node = find(value);}\par
256 {\cf20 }\par
257 {\cf20     if (node != nullptr) \{}\par
258 {\cf20         node->is_word(false);}\par
259 {\cf20         cleanup_delete(node);}\par
260 {\cf20     \}*/}\par
261 \par
262     remove_recursive(root_, value, 0);\par
263 \}\par
264 \par
265 {\cf17 inline} NodoTernario* ArbolTernarioBusqueda::remove_recursive(NodoTernario* node, std::string word, {\cf18 int} position) \{\par
266     {\cf19 if} (node == {\cf17 nullptr}) \{\par
267         {\cf19 return} {\cf17 nullptr};\par
268     \}\par
269 \par
270     {\cf18 int} child = this->count_siblings(node);\par
271 \par
272     {\cf19 if} (word[position] < node->value()) \{\par
273         node->left(this->remove_recursive(node->left(), word, position));\par
274     \} {\cf19 else} {\cf19 if} (word[position] > node->value()) \{\par
275         node->right(this->remove_recursive(node->right(), word, position));\par
276     \} {\cf19 else} \{\par
277         {\cf19 if} ((position + 1) < word.length()) \{\par
278             {\cf20 // When word not empty}\par
279             node->middle(this->remove_recursive(node->middle(), word, position + 1));\par
280         \} {\cf19 else} {\cf19 if} (node->is_word() == {\cf17 true}) \{\par
281             {\cf19 if} (child > 0) \{\par
282                 {\cf20 // In case child node exist of deleted word}\par
283                 node->is_word({\cf17 false});\par
284             \} {\cf19 else} \{\par
285                 {\cf17 delete} node;\par
286                 {\cf19 return} {\cf17 nullptr};\par
287             \}\par
288         \}\par
289     \}\par
290     {\cf19 if} (child != this->count_siblings(node) && child == 1 && node->is_word() == {\cf17 false}) \{\par
291         {\cf17 delete} node;\par
292         {\cf19 return} {\cf17 nullptr};\par
293     \}\par
294 \par
295     {\cf19 return} node;\par
296 \}\par
297 \par
298 {\cf17 inline} {\cf18 void} ArbolTernarioBusqueda::print() \{\par
299     {\cf18 char} buffer[1000];\par
300     NodoBasico* head = {\cf17 new} NodoBasico();\par
301     print_util(root_, buffer, 0, head);\par
302 \par
303     ArbolBT<NodoBasico> printer(head->getHijo().front(), &NodoBasico::getHijo, &NodoBasico::getDato);\par
304     printer.print();\par
305 \}\par
306 \par
307 {\cf17 inline} NodoTernario* ArbolTernarioBusqueda::create_if_not_extant(NodoTernario* tree, NodoTernario*& child, std::string label) \{\par
308     {\cf19 if} (child == {\cf17 nullptr}) \{\par
309         child = {\cf17 new} NodoTernario({\cf23 ' '});\par
310     \}\par
311 \par
312     {\cf19 return} child;\par
313 \}\par
314 \par
315 {\cf17 inline} {\cf18 void} ArbolTernarioBusqueda::print_util(NodoTernario* root, {\cf18 char}* buffer, {\cf18 int} depth, NodoBasico* head) \{\par
316     {\cf19 if} (root != {\cf17 nullptr}) \{\par
317         NodoBasico* node = {\cf17 new} NodoBasico({\cf22 "[ "} + std::string(1, root->value()) + {\cf22 " ]"});\par
318         print_util(root->left(), buffer, depth, node);\par
319         head->agregarHijo(node);\par
320         print_util(root->middle(), buffer, depth + 1, node);\par
321         print_util(root->right(), buffer, depth, node);\par
322     \}\par
323 \}\par
324 \par
325 {\cf17 inline} {\cf18 void} ArbolTernarioBusqueda::insert_recursive(NodoTernario* tree, std::string value) \{\par
326     {\cf19 if} (value.length() == 0) \{\par
327         tree->is_word({\cf17 true});\par
328         {\cf19 return};\par
329     \} {\cf19 else} \{\par
330         {\cf19 if} (tree->value() == {\cf23 ' '}) \{\par
331             tree->value(value.at(0));\par
332 \par
333             {\cf19 if} (tree->middle() == {\cf17 nullptr}) \{\par
334                 std::string label = {\cf22 "="} + std::string(1, value.at(0));\par
335                 NodoTernario* node = tree->middle();\par
336 \par
337                 {\cf19 if} (node == {\cf17 nullptr}) \{\par
338                     node = {\cf17 new} NodoTernario({\cf23 ' '});\par
339                 \}\par
340 \par
341                 tree->middle(node);\par
342                 tree->middle()->parent(tree);\par
343             \}\par
344 \par
345             insert_recursive(tree->middle(), value.substr(1));\par
346         \} {\cf19 else} {\cf19 if} (tree->value() == value.at(0)) \{\par
347             insert_recursive(tree->middle(), value.substr(1));\par
348         \} {\cf19 else} \{\par
349             NodoTernario* child = {\cf17 nullptr};\par
350             std::string label;\par
351 \par
352             {\cf19 if} (tree->value() > value.at(0)) \{\par
353                 label = {\cf22 "<"} + tree->value();\par
354                 NodoTernario* node = tree->left();\par
355 \par
356                 {\cf19 if} (node == {\cf17 nullptr}) \{\par
357                     node = {\cf17 new} NodoTernario({\cf23 ' '});\par
358                 \}\par
359 \par
360                 tree->left(node);\par
361                 tree->left()->parent(tree);\par
362                 child = tree->left();\par
363             \} {\cf19 else} \{\par
364                 label = {\cf22 ">"} + tree->value();\par
365                 NodoTernario* node = tree->right();\par
366 \par
367                 {\cf19 if} (node == {\cf17 nullptr}) \{\par
368                     node = {\cf17 new} NodoTernario({\cf23 ' '});\par
369                 \}\par
370 \par
371                 tree->right(node);\par
372                 tree->right()->parent(tree);\par
373                 child = tree->right();\par
374             \}\par
375 \par
376             insert_recursive(child, value);\par
377         \}\par
378     \}\par
379 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Ayuda.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Ayuda.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Ayuda.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Ayuda}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ayuda.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Ayuda.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Ayuda.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <string>}\par
3 \par
4 {\cf17 class }Ayuda \{\par
5 {\cf17 public}:\par
6     {\cf17 static} std::string uppercase(std::string str) \{\par
7         {\cf19 for} ({\cf18 int} i = 0; i < str.length(); i++) \{\par
8             str[i] = toupper(str[i]);\par
9         \}\par
10 \par
11         {\cf19 return} str;\par
12     \}\par
13 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/GestorAplicacion.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/GestorAplicacion.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/GestorAplicacion.cpp}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "GestorAplicacion.h"}\par
{\f2 #include "menu.h"}\par
{\f2 #include "Validaciones.h"}\par
{\f2 #include <Windows.h>}\par
{\f2 #include <filesystem>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/GestorAplicacion.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/GestorAplicacion.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/GestorAplicacion.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ArbolTernarioBusqueda.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GestorAplicacion}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GestorAplicacion.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/GestorAplicacion.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/GestorAplicacion.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include "ArbolTernarioBusqueda.h"}\par
3 \par
4 {\cf17 class }GestorAplicacion \{\par
5 {\cf17 public}:\par
6     GestorAplicacion() \{\par
7         arbol = {\cf17 new} ArbolTernarioBusqueda();\par
8     \}\par
9     \par
10     {\cf17 static} {\cf18 int} iniciar();\par
11     {\cf18 void} correr();\par
12     {\cf18 void} menu_opcion_arbol();\par
13     \par
14 {\cf17 private}:\par
15     ArbolTernarioBusqueda* arbol;\par
16 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/main.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/main.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/main.cpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "GestorAplicacion.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de las funciones\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Menu.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Menu.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Menu.cpp}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Menu.h"}\par
{\f2 #include <conio.h>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Menu.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Menu.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Menu.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MenuOpciones.h"}\par
{\f2 #include <iostream>}\par
{\f2 #include <vector>}\par
{\f2 #include <windows.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Console}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Menu}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b KEY_UP}\~ 72\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b KEY_DOWN}\~ 80\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b KEY_LEFT}\~ 77\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b KEY_RIGHT}\~ 75\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b KEY_ENTER}\~ 13\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b KEY_ESCAPE}\~ 27\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de los 'defines'\par
\pard\plain 
{\xe \v KEY_DOWN\:Menu.h}
{\xe \v Menu.h\:KEY_DOWN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define KEY_DOWN\~ 80}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v KEY_ENTER\:Menu.h}
{\xe \v Menu.h\:KEY_ENTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define KEY_ENTER\~ 13}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v KEY_ESCAPE\:Menu.h}
{\xe \v Menu.h\:KEY_ESCAPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define KEY_ESCAPE\~ 27}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v KEY_LEFT\:Menu.h}
{\xe \v Menu.h\:KEY_LEFT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define KEY_LEFT\~ 77}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v KEY_RIGHT\:Menu.h}
{\xe \v Menu.h\:KEY_RIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define KEY_RIGHT\~ 75}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v KEY_UP\:Menu.h}
{\xe \v Menu.h\:KEY_UP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define KEY_UP\~ 72}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Menu.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Menu.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Menu.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include "MenuOpciones.h"}\par
3 {\cf21 #include <iostream>}\par
4 {\cf21 #include <vector>}\par
5 {\cf21 #include <windows.h>}\par
6 \par
7 {\cf21 #define KEY_UP 72}\par
8 {\cf21 #define KEY_DOWN 80}\par
9 {\cf21 #define KEY_LEFT 77}\par
10 {\cf21 #define KEY_RIGHT 75}\par
11 {\cf21 #define KEY_ENTER 13}\par
12 {\cf21 #define KEY_ESCAPE 27}\par
13 \par
14 \par
15 {\cf17 class }Console\par
16 \{\par
17 {\cf17 public}:\par
18     Console(Console {\cf17 const}&) = {\cf17 delete};\par
19     Console& operator=(Console {\cf17 const}&) = {\cf17 delete};\par
20     {\cf17 static} Console& get();\par
21 \par
22     {\cf18 void} print(std::string text, COORD coord);\par
23     {\cf18 void} clear_line({\cf18 short} y);\par
24     {\cf18 void} clear_screen();\par
25     {\cf18 void} clear_area(SMALL_RECT area);\par
26     {\cf18 void} set_cursor_position(COORD coord);\par
27     COORD get_console_size();\par
28 \par
29 {\cf17 private}:\par
30     Console();\par
31 \};\par
32 \par
33 {\cf17 class }Menu \{\par
34 {\cf17 public}:\par
35     Menu();\par
36     Menu(std::string title);\par
37 \par
42     {\cf18 void} add_option(MenuOption option);\par
43 \par
48     {\cf18 void} remove_option({\cf18 int} index);\par
49 \par
53     {\cf18 void} display();\par
54 \par
58     {\cf18 void} stop();\par
59 \par
64     {\cf18 bool} is_running();\par
65 \par
66     MenuOption opcion_salir(std::string label = {\cf22 "Salir"}, {\cf18 bool} pausar = {\cf17 false}) \{\par
67         {\cf19 return} MenuOption(label, [&]() \{\par
68             stop();\par
69         \}, pausar);\par
70     \}\par
71 \par
72 {\cf17 private}:\par
73     std::string title;\par
74     std::vector<MenuOption> options;\par
75     HANDLE conhandler;\par
76     {\cf18 bool} running = {\cf17 false};\par
77 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/MenuOpciones.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/MenuOpciones.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/MenuOpciones.cpp}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MenuOpciones.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/MenuOpciones.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/MenuOpciones.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/MenuOpciones.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <functional>}\par
{\f2 #include <vector>}\par
{\f2 #include <map>}\par
{\f2 #include <memory>}\par
{\f2 #include <optional>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MenuOptionArgumentBase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MenuOptionArgument< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MenuOptionArguments}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MenuOption}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __MENU_CLASSES_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::function< void({\b MenuOptionArguments} args)> {\b MenuOptionCallback}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::function< void()> {\b MenuOptionCallback2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de los 'defines'\par
\pard\plain 
{\xe \v __MENU_CLASSES_\:MenuOpciones.h}
{\xe \v MenuOpciones.h\:__MENU_CLASSES_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define __MENU_CLASSES_}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de los 'typedefs'\par
\pard\plain 
{\xe \v MenuOptionCallback\:MenuOpciones.h}
{\xe \v MenuOpciones.h\:MenuOptionCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef std::function<void({\b MenuOptionArguments} args)> {\b MenuOptionCallback}}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MenuOptionCallback2\:MenuOpciones.h}
{\xe \v MenuOpciones.h\:MenuOptionCallback2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef std::function<void()> {\b MenuOptionCallback2}}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MenuOpciones.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/MenuOpciones.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/MenuOpciones.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <string>}\par
3 {\cf21 #include <functional>}\par
4 {\cf21 #include <vector>}\par
5 {\cf21 #include <map>}\par
6 {\cf21 #include <memory>}\par
7 {\cf21 #include <optional>}\par
8 \par
9 {\cf21 #ifndef __MENU_CLASSES_}\par
10 {\cf21 #define __MENU_CLASSES_}\par
11 \par
12 {\cf17 class }MenuOptionArgumentBase\par
13 \{\par
14 {\cf17 public}:\par
15     {\cf17 virtual} ~MenuOptionArgumentBase() = 0;\par
16 \};\par
17 \par
18 {\cf17 inline} MenuOptionArgumentBase::~MenuOptionArgumentBase() \{\}\par
19 \par
21 \par
22 {\cf17 template} <{\cf17 typename} T>\par
23 {\cf17 class }MenuOptionArgument : {\cf17 public} MenuOptionArgumentBase \{\par
24 {\cf17 public}:\par
25     {\cf17 typedef} T Type;\par
26     {\cf17 explicit} MenuOptionArgument({\cf17 const} Type& value);\par
27     Type get_value();\par
28     {\cf18 void} set_value(Type value);\par
29 {\cf17 private}:\par
30     Type value;\par
31 \};\par
32 \par
33 {\cf17 template} <{\cf17 typename} T>\par
34 MenuOptionArgument<T>::MenuOptionArgument({\cf17 const} T& value): value(value) \{\}\par
35 \par
36 {\cf17 template} <{\cf17 typename} T>\par
37 T MenuOptionArgument<T>::get_value() \{\par
38     {\cf19 return} value;\par
39 \}\par
40 \par
41 {\cf17 template} <{\cf17 typename} T>\par
42 {\cf18 void} MenuOptionArgument<T>::set_value(T value) \{\par
43     this->value = value;\par
44 \}\par
45 \par
47 \par
48 {\cf17 class }MenuOptionArguments \{\par
49 {\cf17 public}:\par
50     MenuOptionArguments();\par
51 \par
58     {\cf17 template} <{\cf17 typename} T>\par
59     {\cf18 void} add(std::string key, MenuOptionArgument<T> *argument);\par
60 \par
67     {\cf17 template} <{\cf17 typename} T>\par
68     {\cf18 void} add(std::string key, T value);\par
69 \par
76     {\cf17 template} <{\cf17 typename} T>\par
77     T get(std::string key);\par
78 \par
85     {\cf17 template} <{\cf17 typename} T>\par
86     {\cf18 void} set(std::string key, T value);\par
87 \par
88     {\cf18 bool} has(std::string key);\par
89 {\cf17 private}:\par
90     std::map<std::string, std::unique_ptr<MenuOptionArgumentBase>> *arguments;\par
91 \};\par
92 \par
93 {\cf17 inline} MenuOptionArguments::MenuOptionArguments() \{\par
94     arguments = {\cf17 new} std::map<std::string, std::unique_ptr<MenuOptionArgumentBase>>();\par
95 \}\par
96 \par
97 {\cf17 template} <{\cf17 typename} T>\par
98 {\cf18 void} MenuOptionArguments::add(std::string key, MenuOptionArgument<T> *argument) \{\par
99     (*arguments)[key] = std::unique_ptr<MenuOptionArgumentBase>(argument);\par
100 \}\par
101 \par
102 {\cf17 template} <{\cf17 typename} T>\par
103 {\cf18 void} MenuOptionArguments::add(std::string key, T value) \{\par
104     add(key, {\cf17 new} MenuOptionArgument<T>(value));\par
105 \}\par
106 \par
107 {\cf17 template} <{\cf17 typename} T>\par
108 T MenuOptionArguments::get(std::string key) \{\par
109     {\cf17 auto} arg = {\cf17 dynamic_cast<}MenuOptionArgument<T>&{\cf17 >}(*((*arguments)[key]));\par
110     {\cf19 return} arg.get_value();\par
111 \}\par
112 \par
113 {\cf17 template} <{\cf17 typename} T>\par
114 {\cf18 void} MenuOptionArguments::set(std::string key, T value) \{\par
115     {\cf17 auto} arg = {\cf17 dynamic_cast<}MenuOptionArgument<T>&{\cf17 >}(*((*arguments)[key]));\par
116     arg.set_value(value);\par
117 \}\par
118 \par
119 {\cf17 inline} {\cf18 bool} MenuOptionArguments::has(std::string key) \{\par
120     {\cf19 return} !(arguments->find(key) == arguments->end());\par
121 \}\par
122 \par
123 {\cf21 #endif}\par
124 \par
126 \par
127 {\cf17 typedef} std::function<void(MenuOptionArguments args)> MenuOptionCallback;\par
128 {\cf17 typedef} std::function<void()> MenuOptionCallback2;\par
129 \par
130 {\cf17 class }MenuOption \{\par
131 {\cf17 public}:\par
132     MenuOption(std::string label, MenuOptionCallback callback);\par
133     MenuOption(std::string label, MenuOptionCallback callback, {\cf18 bool} wait_after_exec);\par
134     MenuOption(std::string label, MenuOptionCallback callback, MenuOptionArguments arguments);\par
135     MenuOption(std::string label, MenuOptionCallback callback, MenuOptionArguments arguments, {\cf18 bool} wait_after_exec);\par
136 \par
137     MenuOption(std::string label, MenuOptionCallback2 callback);\par
138     MenuOption(std::string label, MenuOptionCallback2 callback, {\cf18 bool} wait_after_exec);\par
139     MenuOption(std::string label, MenuOptionCallback2 callback, MenuOptionArguments arguments);\par
140     MenuOption(std::string label, MenuOptionCallback2 callback, MenuOptionArguments arguments, {\cf18 bool} wait_after_exec);\par
141 \par
142     {\cf18 bool} visible();\par
143     {\cf18 void} visible({\cf18 bool} visible);\par
144     {\cf18 void} visible(std::function<{\cf18 bool}()> visible_cb);\par
145 \par
150     std::string get_label();\par
151 \par
155     {\cf18 void} execute();\par
156 \par
161     {\cf18 bool} should_wait();\par
162 \par
167     MenuOptionArguments &get_args();\par
168 \par
169 {\cf17 private}:\par
170     std::string label;\par
171     std::optional<MenuOptionCallback> callback;\par
172     std::optional<MenuOptionCallback2> callback2;\par
173     {\cf18 bool} wait_after_exec = {\cf17 true};\par
174     MenuOptionArguments arguments;\par
175     std::function<bool()> visible_callback_ = []() \{ {\cf19 return} {\cf17 true}; \};\par
176 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoArbolBinario.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoArbolBinario.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoArbolBinario.h}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <list>}\par
{\f2 #include <vector>}\par
{\f2 #include <memory>}\par
{\f2 #include <climits>}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NodoArbolBinario< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ArbolBT< T >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CALL_MEMBER_FN}(object,  ptrToMember)\~ ((object).*(ptrToMember))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de los 'defines'\par
\pard\plain 
{\xe \v CALL_MEMBER_FN\:NodoArbolBinario.h}
{\xe \v NodoArbolBinario.h\:CALL_MEMBER_FN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CALL_MEMBER_FN( object,  ptrToMember)\~ ((object).*(ptrToMember))}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NodoArbolBinario.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoArbolBinario.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoArbolBinario.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include <string>}\par
4 {\cf21 #include <list>}\par
5 {\cf21 #include <vector>}\par
6 {\cf21 #include <memory>}\par
7 {\cf21 #include <climits>}\par
8 {\cf21 #include <iostream>}\par
9 \par
10 {\cf21 #define CALL_MEMBER_FN(object, ptrToMember) ((object).*(ptrToMember))}\par
11 \par
12 {\cf17 template} <{\cf17 class} T>\par
13 {\cf17 class }NodoArbolBinario\par
14 \{\par
15   {\cf17 public}:\par
16     {\cf17 typedef} std::list<T*> (T::*hijoGetterFcn)( void);\par
17     {\cf17 typedef} std::string   (T::*datoGetterFcn)    ( void);\par
18     {\cf17 static} {\cf18 void} inicializarClase(hijoGetterFcn f1, datoGetterFcn f2);\par
19 \par
20   {\cf17 private}:\par
21     {\cf17 static} hijoGetterFcn hijoGetter;\par
22     {\cf17 static} datoGetterFcn     datoGetter;\par
23 \par
24     std::list<T *> getHijo();\par
25     std::string    getDato();\par
26     \par
27   {\cf17 public}:\par
28     NodoArbolBinario(T* node);\par
29 \par
30     {\cf17 virtual} ~NodoArbolBinario();\par
31 \par
32     {\cf18 void} imprimirArbol(std::shared_ptr<NodoArbolBinario<T>> thisHead);\par
33 \par
34   {\cf17 private}:\par
35     T * _nd;\par
36     std::list<std::shared_ptr<NodoArbolBinario>> _hijo;\par
37     std::size_t _profundidad;\par
38 \par
39     std::size_t _wser;\par
40     std::size_t _whijo;\par
41     std::size_t _wbloque;\par
42 \par
43     std::size_t _fcp;\par
44     std::size_t _lcp;\par
45     std::size_t _mcp;\par
46     std::size_t _fbp;\par
47     std::size_t _lbp;\par
48 \par
49     {\cf18 void} calcProfundidad(std::size_t profundidadInicial);\par
50     std::size_t calcAncho();\par
51 \par
52     {\cf18 void} agruparNodosPorProfundidad(std::vector<std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>> & niveles, std::shared_ptr<NodoArbolBinario<T>> estaCabeza);\par
53     std::size_t cambiarPosicionesNodos(std::size_t blockStart);\par
54     \par
55     {\cf18 void} imprimirLinea(std::size_t ln,    std::vector<std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>> & niveles);\par
56     {\cf18 void} imprimirPrelinea(std::size_t ln, std::vector<std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>> & niveles);\par
57     \par
58     std::size_t imprimirNodoInicialAt(std::size_t c, std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>> & niveles);\par
59     std::size_t imprimirNodoDato();\par
60     \par
61     {\cf18 bool} CisPadrePrimerCaracter(std::size_t c, std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>> & nivel);\par
62     {\cf18 bool} CisEntreHijoYPadre(std::size_t c, std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>> & padre);\par
63     {\cf18 bool} CisCentroHijo(std::size_t c, std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>> & hijo);\par
64     {\cf18 int} padrePosicionHijosReales(std::size_t c, std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>> & padre, std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>> & hijo);\par
65     \par
66     \par
67     {\cf18 void} imprimirEspacio();\par
68     {\cf18 void} imprimirGuionBajo();\par
69     {\cf18 void} imprimirHijosIzquierdos();\par
70     {\cf18 void} imprimirHijosDerechos();\par
71     {\cf18 void} imprimirHijosVerticales();\par
72 \par
73 \};\par
74 \par
75 {\cf17 template} <{\cf17 class} T>\par
76 {\cf17 class }ArbolBT\par
77 \{\par
78   {\cf17 public}:\par
79     {\cf17 typedef} std::list<T*> (T::*hijoGetterFcn)( void);\par
80     {\cf17 typedef} std::string   (T::*datoGetterFcn)    ( void);\par
81     ArbolBT(T* head, hijoGetterFcn f1, datoGetterFcn f2);\par
82     {\cf18 void} print();\par
83 \par
84   {\cf17 private}:\par
85     std::shared_ptr<NodoArbolBinario<T>> _cabeza;\par
86 \};\par
87 \par
88 {\cf17 template} <{\cf17 class} T>\par
89 {\cf17 typename} NodoArbolBinario<T>::hijoGetterFcn NodoArbolBinario<T>::hijoGetter = {\cf17 nullptr};\par
90 \par
91 {\cf17 template} <{\cf17 class} T>\par
92 {\cf17 typename} NodoArbolBinario<T>::datoGetterFcn NodoArbolBinario<T>::datoGetter = {\cf17 nullptr};\par
93 \par
94 {\cf17 template} <{\cf17 class} T>\par
95 {\cf18 void} NodoArbolBinario<T>::inicializarClase(hijoGetterFcn f1, datoGetterFcn f2) \{\par
96     hijoGetter = f1;\par
97     datoGetter = f2;\par
98 \}\par
99 \par
100 {\cf17 template} <{\cf17 class} T>\par
101 std::list<T*> NodoArbolBinario<T>::getHijo() \{\par
102     {\cf19 return} CALL_MEMBER_FN(*_nd, hijoGetter)();\par
103 \}\par
104 \par
105 {\cf17 template} <{\cf17 class} T>\par
106 std::string NodoArbolBinario<T>::getDato() \{\par
107     {\cf19 return} CALL_MEMBER_FN(*_nd, datoGetter)();\par
108 \}\par
109 \par
110 \par
111 {\cf17 template} <{\cf17 class} T>\par
112 NodoArbolBinario<T>::NodoArbolBinario(T* node) \{\par
113     _nd = node;\par
114     _profundidad = 0;\par
115 \par
116     _fcp = 0;\par
117     _lcp = 0;\par
118     _mcp = 0;\par
119 \par
120     _fbp = 0;\par
121     _lbp = 0;\par
122 \par
123     _wser = getDato().length();\par
124     _whijo = 0;\par
125     _wbloque = 0;\par
126 \par
127     std::list<T*> ls = getHijo();\par
128     {\cf19 for} ({\cf17 auto}& hijo : ls) \{\par
129         std::shared_ptr<NodoArbolBinario> nuevoHijo({\cf17 new} NodoArbolBinario(hijo));\par
130         _hijo.push_back(std::move(nuevoHijo));\par
131     \}\par
132 \}\par
133 \par
134 {\cf17 template} <{\cf17 class} T>\par
135 NodoArbolBinario<T>::~NodoArbolBinario() \{\par
136 \}\par
137 \par
138 {\cf17 template} <{\cf17 class} T>\par
139 {\cf18 void} NodoArbolBinario<T>::imprimirArbol(std::shared_ptr<NodoArbolBinario<T>> cabeza) \{\par
140 \par
141     calcProfundidad(0);\par
142     calcAncho();\par
143 \par
144     std::vector<std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>> niveles;\par
145     agruparNodosPorProfundidad(niveles, cabeza);\par
146     cambiarPosicionesNodos(0);\par
147     imprimirLinea(0, niveles);\par
148 \par
149     {\cf19 for} (std::size_t i = 1; i < niveles.size(); i++) \{\par
150         imprimirPrelinea(i, niveles);\par
151         imprimirLinea(i, niveles);\par
152     \}\par
153 \}\par
154 \par
155 {\cf17 template} <{\cf17 class} T>\par
156 {\cf18 void} NodoArbolBinario<T>::calcProfundidad(std::size_t profundidadInicial) \{\par
157     _profundidad = profundidadInicial;\par
158     {\cf19 for} ({\cf17 auto}& hijo : _hijo) \{\par
159         hijo->calcProfundidad(profundidadInicial + 1);\par
160     \}\par
161 \}\par
162 \par
163 {\cf17 template} <{\cf17 class} T>\par
164 std::size_t NodoArbolBinario<T>::calcAncho() \{\par
165     {\cf19 if} (_hijo.empty()) \{\par
166         _whijo = 0;\par
167     \} {\cf19 else} \{\par
168         _whijo += _hijo.front()->calcAncho();\par
169 \par
170         {\cf17 auto} it = ++_hijo.begin();\par
171         {\cf19 for} (; it != _hijo.end(); ++it) \{\par
172             _whijo += 1;\par
173             _whijo += (*it)->calcAncho();\par
174         \}\par
175     \}\par
176     _wbloque = std::max(_wser, _whijo);\par
177     {\cf19 return} _wbloque;\par
178 \}\par
179 \par
180 {\cf17 template} <{\cf17 class} T>\par
181 {\cf18 void} NodoArbolBinario<T>::agruparNodosPorProfundidad(std::vector<std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>>& niveles, std::shared_ptr<NodoArbolBinario<T>> thisHead) \{\par
182     std::list<std::shared_ptr<NodoArbolBinario>> cola;\par
183     std::shared_ptr<NodoArbolBinario> nd;\par
184 \par
185     cola.push_back(thisHead);\par
186 \par
187     {\cf19 while} (!cola.empty()) \{\par
188         nd = cola.front();\par
189         cola.pop_front();\par
190         {\cf19 for} ({\cf17 auto}& hijo : nd->_hijo) \{\par
191             cola.push_back(hijo);\par
192         \}\par
193         {\cf19 while} (niveles.size() <= nd->_profundidad) \{\par
194             std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>> capa({\cf17 new} std::list<std::shared_ptr<NodoArbolBinario>>());\par
195             niveles.push_back(std::move(capa));\par
196         \}\par
197         niveles[nd->_profundidad]->push_back(nd);\par
198     \}\par
199 \}\par
200 \par
201 {\cf17 template} <{\cf17 class} T>\par
202 std::size_t NodoArbolBinario<T>::cambiarPosicionesNodos(std::size_t bloqueInicio) \{\par
203     _fbp = bloqueInicio;\par
204     _lbp = bloqueInicio + _wbloque - 1;\par
205 \par
206     {\cf19 if} (_wser >= _whijo) \{\par
207         _fcp = bloqueInicio + (_wbloque - _wser) / 2;\par
208         _lcp = _fcp + _wser - 1;\par
209         _mcp = (_fcp + _lcp) / 2; {\cf20 // left aligning;}\par
210 \par
211         std::size_t inicioBloqueHijos = bloqueInicio + (_wbloque - _whijo) / 2;\par
212         {\cf19 for} (std::shared_ptr<NodoArbolBinario>& nd : _hijo) \{\par
213             inicioBloqueHijos = nd->cambiarPosicionesNodos(inicioBloqueHijos);\par
214         \}\par
215     \} {\cf19 else} \{\par
216         std::size_t inicioBloqueHijos = bloqueInicio + (_wbloque - _whijo) / 2;\par
217         {\cf19 for} (std::shared_ptr<NodoArbolBinario>& nd : _hijo) \{\par
218             inicioBloqueHijos = nd->cambiarPosicionesNodos(inicioBloqueHijos);\par
219         \}\par
220 \par
221         _mcp = (_hijo.front()->_mcp + _hijo.back()->_mcp) / 2;\par
222         _fcp = _mcp - (_wser - 1) / 2; {\cf20 // left aligning;}\par
223         _lcp = _fcp + _wser - 1;\par
224     \}\par
225 \par
226     {\cf19 return} bloqueInicio + _wbloque + 1;\par
227 \}\par
228 \par
229 {\cf17 template} <{\cf17 class} T>\par
230 {\cf18 void} NodoArbolBinario<T>::imprimirLinea(std::size_t ln, std::vector<std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>>& niveles) \{\par
231     {\cf19 for} (std::size_t c = 0; c < _wbloque; c++) \{\par
232         {\cf19 if} (CisPadrePrimerCaracter(c, niveles[ln])) \{\par
233             c += imprimirNodoInicialAt(c, niveles[ln]) - 1;\par
234         \} {\cf19 else} {\cf19 if} (CisEntreHijoYPadre(c, niveles[ln])) \{\par
235             imprimirGuionBajo();\par
236         \} {\cf19 else} \{\par
237             imprimirEspacio();\par
238         \}\par
239     \}\par
240     std::cout << std::endl;\par
241 \}\par
242 \par
243 {\cf17 template} <{\cf17 class} T>\par
244 {\cf18 void} NodoArbolBinario<T>::imprimirPrelinea(std::size_t ln, std::vector<std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>>& niveles) \{\par
245     {\cf19 for} (std::size_t c = 0; c < _wbloque; c++) \{\par
246         {\cf19 if} (CisCentroHijo(c, niveles[ln])) \{\par
247             {\cf19 switch} (padrePosicionHijosReales(c, niveles[ln - 1], niveles[ln])) \{\par
248             {\cf19 case} -1:\par
249                 imprimirHijosIzquierdos();\par
250                 {\cf19 break};\par
251             {\cf19 case} 0:\par
252                 imprimirHijosVerticales();\par
253                 {\cf19 break};\par
254             {\cf19 case} 1:\par
255                 imprimirHijosDerechos();\par
256                 {\cf19 break};\par
257             \}\par
258         \} {\cf19 else} \{\par
259             imprimirEspacio();\par
260         \}\par
261     \}\par
262     std::cout << std::endl;\par
263 \}\par
264 \par
265 {\cf17 template} <{\cf17 class} T>\par
266 {\cf18 bool} NodoArbolBinario<T>::CisPadrePrimerCaracter(std::size_t c, std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>& nivel) \{\par
267     {\cf19 for} (std::shared_ptr<NodoArbolBinario>& nd : *nivel) \{\par
268         {\cf19 if} (nd->_fcp == c)\par
269             {\cf19 return} {\cf17 true};\par
270     \}\par
271     {\cf19 return} {\cf17 false};\par
272 \}\par
273 \par
274 {\cf17 template} <{\cf17 class} T>\par
275 std::size_t NodoArbolBinario<T>::imprimirNodoInicialAt(std::size_t c, std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>& nivel) \{\par
276     {\cf19 for} (std::shared_ptr<NodoArbolBinario>& nd : *nivel) \{\par
277         {\cf19 if} (nd->_fcp == c) \{\par
278             {\cf19 return} nd->imprimirNodoDato();\par
279         \}\par
280     \}\par
281     {\cf19 return} 0;\par
282 \}\par
283 \par
284 {\cf17 template} <{\cf17 class} T>\par
285 {\cf18 bool} NodoArbolBinario<T>::CisEntreHijoYPadre(std::size_t c, std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>& padre) \{\par
286     {\cf19 for} (std::shared_ptr<NodoArbolBinario>& nd : *padre) \{\par
287         {\cf19 if} (nd->_hijo.empty()) \{\par
288             {\cf19 continue};\par
289         \}\par
290         std::size_t minCp = nd->_hijo.front()->_mcp;\par
291         std::size_t maxCp = nd->_hijo.back()->_mcp;\par
292         {\cf19 if} (c > minCp && c < maxCp)\par
293             {\cf19 return} {\cf17 true};\par
294     \}\par
295     {\cf19 return} {\cf17 false};\par
296 \}\par
297 \par
298 {\cf17 template} <{\cf17 class} T>\par
299 {\cf18 bool} NodoArbolBinario<T>::CisCentroHijo(std::size_t c, std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>& hijos) \{\par
300     {\cf19 for} (std::shared_ptr<NodoArbolBinario>& nd : *hijos) \{\par
301         {\cf19 if} (nd->_mcp == c)\par
302             {\cf19 return} {\cf17 true};\par
303     \}\par
304     {\cf19 return} {\cf17 false};\par
305 \}\par
306 \par
307 {\cf17 template} <{\cf17 class} T>\par
308 {\cf18 int} NodoArbolBinario<T>::padrePosicionHijosReales(std::size_t c, std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>& padre, std::unique_ptr<std::list<std::shared_ptr<NodoArbolBinario>>>& hijos) \{\par
309     std::shared_ptr<NodoArbolBinario> dad = {\cf17 nullptr};\par
310     std::shared_ptr<NodoArbolBinario> kid = {\cf17 nullptr};\par
311     {\cf19 for} (std::shared_ptr<NodoArbolBinario>& nd : *padre) \{\par
312         {\cf19 if} ((c >= nd->_fbp) && (c <= nd->_lbp)) \{\par
313             dad = nd;\par
314         \}\par
315     \}\par
316     {\cf19 for} ({\cf17 auto}& nd : *hijos) \{\par
317         {\cf19 if} ((c >= nd->_fbp) && (c <= nd->_lbp)) \{\par
318             kid = nd;\par
319         \}\par
320     \}\par
321 \par
322     {\cf19 if} (kid->_mcp < dad->_mcp)\par
323         {\cf19 return} -1;\par
324     {\cf19 else} {\cf19 if} (kid->_mcp == dad->_mcp)\par
325         {\cf19 return} 0;\par
326     {\cf19 else}\par
327         {\cf19 return} 1;\par
328 \}\par
329 \par
330 {\cf17 template} <{\cf17 class} T>\par
331 std::size_t NodoArbolBinario<T>::imprimirNodoDato() \{\par
332     std::cout << getDato();\par
333     {\cf19 return} _wser;\par
334 \}\par
335 \par
336 {\cf17 template} <{\cf17 class} T>\par
337 {\cf18 void} NodoArbolBinario<T>::imprimirEspacio() \{\par
338     std::cout << {\cf22 " "};\par
339 \}\par
340 \par
341 {\cf17 template} <{\cf17 class} T>\par
342 {\cf18 void} NodoArbolBinario<T>::imprimirGuionBajo() \{\par
343     std::cout << {\cf22 "_"};\par
344 \}\par
345 \par
346 {\cf17 template} <{\cf17 class} T>\par
347 {\cf18 void} NodoArbolBinario<T>::imprimirHijosIzquierdos() \{\par
348     std::cout << {\cf22 "/"};\par
349 \}\par
350 \par
351 {\cf17 template} <{\cf17 class} T>\par
352 {\cf18 void} NodoArbolBinario<T>::imprimirHijosDerechos() \{\par
353     std::cout << {\cf22 "\\\\"};\par
354 \}\par
355 \par
356 {\cf17 template} <{\cf17 class} T>\par
357 {\cf18 void} NodoArbolBinario<T>::imprimirHijosVerticales() \{\par
358     std::cout << {\cf22 "|"};\par
359 \}\par
360 \par
361 {\cf17 template} <{\cf17 class} T>\par
362 ArbolBT<T>::ArbolBT(T* cabeza, hijoGetterFcn f1, datoGetterFcn f2) \{\par
363     NodoArbolBinario<T>::inicializarClase(f1, f2);\par
364     _cabeza = std::shared_ptr<NodoArbolBinario<T>>({\cf17 new} NodoArbolBinario<T>(cabeza));\par
365 \}\par
366 \par
367 {\cf17 template} <{\cf17 class} T>\par
368 {\cf18 void} ArbolBT<T>::print() \{\par
369     _cabeza->imprimirArbol(_cabeza);\par
370 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoBasico.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoBasico.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoBasico.cpp}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "NodoBasico.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoBasico.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoBasico.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoBasico.h}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <list>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NodoBasico}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NodoBasico.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoBasico.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoBasico.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <string>}\par
3 {\cf21 #include <list>}\par
4 \par
5 {\cf17 class }NodoBasico \{\par
6 {\cf17 public}:\par
7     NodoBasico();\par
8     NodoBasico(std::string dato);\par
9 \par
10     {\cf17 virtual} ~NodoBasico();\par
11 \par
12     {\cf18 void} agregarHijo(NodoBasico* nd);\par
13     std::list<NodoBasico*> getHijo();\par
14 \par
15     std::string getDato();\par
16     {\cf18 void} setDato(std::string data);\par
17 \par
18 {\cf17 protected}:\par
19     {\cf18 void} setPadre(NodoBasico* nd);\par
20 \par
21     std::string _dato;\par
22 \par
23     std::list<NodoBasico*> _hijo;\par
24     NodoBasico* _padre;\par
25 \};\par
26 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoTernario.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoTernario.cpp}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoTernario.cpp}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "NodoTernario.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoTernario.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoTernario.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoTernario.h}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NodoTernario}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NodoTernario.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoTernario.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/NodoTernario.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <string>}\par
3 \par
4 {\cf17 class }NodoTernario \{\par
5 {\cf17 public}:\par
6     NodoTernario({\cf18 char} value);\par
7 \par
8     {\cf18 char} value();\par
9     NodoTernario*& left();\par
10     NodoTernario*& middle();\par
11     NodoTernario*& right();\par
12     NodoTernario*& parent();\par
13     {\cf18 bool} is_word();\par
14 \par
15     {\cf18 void} value({\cf18 char} valor);\par
16     {\cf18 void} left(NodoTernario* izquierda);\par
17     {\cf18 void} middle(NodoTernario* medio);\par
18     {\cf18 void} right(NodoTernario* derecha);\par
19     {\cf18 void} parent(NodoTernario* padre);\par
20     {\cf18 void} is_word({\cf18 bool} valor);\par
21 \par
22 {\cf17 private}:\par
23     {\cf18 char} valor_;\par
24     NodoTernario* izquierda_ = {\cf17 nullptr};\par
25     NodoTernario* medio_ = {\cf17 nullptr};\par
26     NodoTernario* derecha_ = {\cf17 nullptr};\par
27     NodoTernario* padre_ = {\cf17 nullptr};\par
28     {\cf18 bool} es_palabra_ = {\cf17 false};\par
29 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del Archivo C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Validaciones.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Validaciones.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Validaciones.h}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <cctype>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <conio.h>}\par
{\f2 #include <cmath>}\par
{\f2 #include <vector>}\par
{\f2 #include <sstream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <regex>}\par
{\f2 #include <windows.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Validaciones}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _USE_MATH_DEFINES}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _getch}\~ getch\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de los 'defines'\par
\pard\plain 
{\xe \v _getch\:Validaciones.h}
{\xe \v Validaciones.h\:_getch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _getch\~ getch}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _USE_MATH_DEFINES\:Validaciones.h}
{\xe \v Validaciones.h\:_USE_MATH_DEFINES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _USE_MATH_DEFINES}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Validaciones.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Validaciones.h}
{\xe \v C:/Users/adria/Documents/Estructura de Datos 7999/Proyecto 2/Proyecto_GR11/TernarySearchTree/TernarySearchTree/Validaciones.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Ir a la documentaci\'F3n de este archivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #define _USE_MATH_DEFINES}\par
3 {\cf21 #include <iostream>}\par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <cctype>}\par
6 {\cf21 #include <algorithm>}\par
7 {\cf21 #include <conio.h>}\par
8 {\cf21 #include <cmath>}\par
9 {\cf21 #include <vector>}\par
10 {\cf21 #include <sstream>}\par
11 {\cf21 #include <fstream>}\par
12 {\cf21 #include <regex>}\par
13 {\cf21 #include <windows.h>}\par
14 \par
15 {\cf21 #ifndef _MSC_VER}\par
16 {\cf21 #define _getch getch}\par
17 {\cf21 #endif}\par
18 \par
19 {\cf17 class }Validaciones\par
20 \{\par
21 {\cf17 public}:\par
22     {\cf17 static} {\cf17 inline} {\cf18 int} es_numerico(std::string str) \{\par
23         {\cf19 return} !str.empty() && std::find_if(str.begin(),\par
24             str.end(), []({\cf18 unsigned} {\cf18 char} c) \{\par
25                 return !std::isdigit(c);\par
26         \}) == str.end();\par
27     \}\par
28 \par
29     {\cf17 inline} {\cf17 static} std::vector<std::string> dividirStr(std::string str, {\cf18 char} delimitador) \{\par
30         std::vector<std::string> valores;\par
31         std::stringstream ss(str);\par
32         std::string pla;\par
33 \par
34         {\cf19 while} (std::getline(ss, pla, delimitador)) \{\par
35             valores.push_back(pla);\par
36         \}\par
37 \par
38         {\cf19 return} valores;\par
39     \}\par
40 \par
41     {\cf17 inline} {\cf17 static} std::string recortar({\cf17 const} std::string& str) \{\par
42         std::string recortadoPla(str);\par
43         recortadoPla = recortadoPla.erase(recortadoPla.find_last_not_of({\cf22 " \\t\\n\\r\\f\\v"}) + 1);\par
44         recortadoPla = recortadoPla.erase(0, recortadoPla.find_first_not_of({\cf22 " \\t\\n\\r\\f\\v"}));\par
45 \par
46         {\cf19 return} recortadoPla;\par
47     \}\par
48 \par
49     {\cf17 inline} {\cf17 static} std::string reducirstr({\cf17 const} std::string& str) \{\par
50         std::string salida(str);\par
51 \par
52         std::transform(salida.begin(), salida.end(), salida.begin(),\par
53             []({\cf18 unsigned} {\cf18 char} c) \{ return std::tolower(c); \});\par
54 \par
55         {\cf19 return} salida;\par
56     \}\par
57 \par
58     {\cf17 inline} {\cf17 static} {\cf18 bool} confirmar({\cf17 const} std::string pregunta) \{\par
59         std::string entrada;\par
60         {\cf18 bool} respuesta;\par
61 \par
62         {\cf19 do} \{\par
63             entrada = leer_cadena(pregunta + {\cf22 " (s/n): "});\par
64 \par
65             {\cf19 if} (entrada.empty()) \{\par
66                 {\cf19 continue};\par
67             \}\par
68 \par
69             {\cf19 if} (entrada.length() != 1) \{\par
70                 {\cf19 continue};\par
71             \}\par
72 \par
73             {\cf18 char} c = std::tolower(entrada.at(0));\par
74 \par
75             {\cf19 if} (c != {\cf23 's'} && c != {\cf23 'n'}) \{\par
76                 {\cf19 continue};\par
77             \}\par
78 \par
79             respuesta = (c == {\cf23 's'});\par
80 \par
81             {\cf19 break};\par
82         \} {\cf19 while} ({\cf17 true});\par
83 \par
84         {\cf19 return} respuesta;\par
85     \}\par
86 \par
87     {\cf17 inline} {\cf17 static} std::string leer_contrase\'F1a(std::string etique) \{\par
88         std::string contrase\'F1a;\par
89         {\cf18 int} ch = 0;\par
90 \par
91         std::cout << etique;\par
92 \par
93         {\cf19 while} ({\cf17 true}) \{\par
94             ch = _getch();\par
95 \par
96             {\cf19 if} (ch == 0x00) \{\par
97                 ch = _getch();\par
98             \}\par
99 \par
100             {\cf19 if} (ch == 13) \{\par
101                 {\cf19 break};\par
102             \}\par
103 \par
104             {\cf19 if} (ch == 8) \{\par
105                 {\cf19 if} (contrase\'F1a.length() != 0) \{\par
106                     std::cout << {\cf22 "\\b \\b"};\par
107                     contrase\'F1a.resize(contrase\'F1a.length() - 1);\par
108                 \} {\cf19 else} \{\par
109                     Beep(523, 100);\par
110                 \}\par
111             \} {\cf19 else} \{\par
112                 contrase\'F1a += ch;\par
113                 std::cout << {\cf23 '*'};\par
114             \}\par
115         \}\par
116 \par
117         std::cout << std::endl;\par
118         \par
119         {\cf19 return} contrase\'F1a;\par
120     \}\par
121     \par
122     {\cf17 static} {\cf17 inline} {\cf18 int} convertirEnEntero(std::string cadena)\par
123     \{\par
124         {\cf18 int} numero = 0;\par
125         {\cf18 int} multiplo = 1;\par
126         std::string cadenaReversa = cadena;\par
127 \par
128         {\cf19 if} (cadena.find({\cf22 "."}) != std::string::npos) \{\par
129             cadenaReversa = cadena.substr(0, cadena.find({\cf22 "."}));\par
130         \}\par
131 \par
132         std::reverse(cadenaReversa.begin(), cadenaReversa.end());\par
133 \par
134         {\cf19 for} ({\cf17 const} {\cf18 char} c : cadenaReversa) \{\par
135             {\cf19 if} ((c < '0' || c > {\cf23 '9'}) && c != {\cf23 '-'}) \{\par
136                 {\cf19 if} (numero)\par
137                     {\cf19 break};\par
138                 {\cf19 else}\par
139                     {\cf19 continue};\par
140             \}\par
141 \par
142             {\cf19 if} (c == {\cf23 '-'}) \{\par
143                 {\cf19 if} (numero) \{\par
144                     numero = -numero;\par
145                     {\cf19 break};\par
146                 \}\par
147             \}\par
148             {\cf19 else} \{\par
149                 numero += (c - {\cf23 '0'}) * multiplo;\par
150                 multiplo *= 10;\par
151             \}\par
152         \}\par
153 \par
154         {\cf19 return} numero;\par
155     \}\par
156 \par
157     {\cf17 static} {\cf17 inline} {\cf18 double} convertirEnReal(std::string cadena)\par
158     \{\par
159         {\cf18 double} rez = 0, fct = 1;\par
160 \par
161         {\cf19 if} (cadena.at(0) == {\cf23 '-'}) \{\par
162             fct = -1;\par
163             cadena = cadena.substr(1, cadena.length() - 1);\par
164         \}\par
165 \par
166         {\cf18 bool} punto = {\cf17 false};\par
167         {\cf18 int} indice = 0;\par
168 \par
169         {\cf19 for} ({\cf17 const} {\cf18 char} c : cadena) \{\par
170             {\cf18 int} ascii = (int) c;\par
171 \par
172             {\cf19 if} (c == {\cf23 '.'} || c == {\cf23 ','}) \{\par
173                 {\cf19 if} (punto || (!punto && indice == 0)) \{\par
174                     {\cf19 throw} std::runtime_error({\cf22 "numero real incorrecto"});\par
175                 \}\par
176 \par
177                 punto = {\cf17 true};\par
178                 indice++;\par
179                 {\cf19 continue};\par
180             \}\par
181 \par
182             {\cf19 if} (!isdigit(c)) \{\par
183                 {\cf19 throw} std::runtime_error({\cf22 "numero real incorrecto"});\par
184             \}\par
185 \par
186             {\cf18 int} d = c - {\cf23 '0'};\par
187 \par
188             {\cf19 if} (d >= 0 && d <= 9) \{\par
189                 {\cf19 if} (punto) fct /= 10.0f;\par
190                 rez = rez * 10.0f + {\cf17 static_cast<}{\cf18 double}{\cf17 >}(d);\par
191             \}\par
192 \par
193             indice++;\par
194         \}\par
195 \par
196         {\cf18 double} resultado = rez * fct;\par
197 \par
198         {\cf19 return} resultado;\par
199     \}\par
200 \par
201     {\cf17 static} {\cf17 inline} std::string leerCadenaNumerica({\cf17 const} std::string mensaje) \{\par
202         std::string resultado = {\cf22 ""};\par
203         {\cf18 int} longitud = 0;\par
204 \par
205         std::cout << mensaje;\par
206 \par
207         {\cf19 while} ({\cf17 true}) \{\par
208             {\cf18 int} ascii = _getch();\par
209 \par
210             {\cf19 if} (ascii == 0) \{\par
211                 ascii = _getch();\par
212             \}\par
213 \par
214             {\cf19 if} (ascii == 8) \{\par
215                 {\cf19 if} (longitud == 0) \{\par
216                     {\cf19 continue};\par
217                 \}\par
218 \par
219                 std::cout << {\cf22 "\\b \\b"};\par
220                 resultado.pop_back();\par
221                 longitud--;\par
222                 {\cf19 continue};\par
223             \}\par
224             {\cf19 else} {\cf19 if} (ascii == 13) \{\par
225                 {\cf19 if} (recortar(resultado).length() == 0 || resultado.at(resultado.length() - 1) == {\cf23 '.'}) \{\par
226                     {\cf19 continue};\par
227                 \}\par
228 \par
229                 {\cf19 break};\par
230             \}\par
231 \par
232             {\cf19 if} ((ascii >= 48 && ascii <= 57) || ascii == 45 || ascii == 46 || ascii == 127) \{\par
233                 {\cf19 if} (ascii == 46 && resultado.find({\cf22 "."}) != std::string::npos) \{\par
234                     {\cf19 continue};\par
235                 \}\par
236 \par
237                 {\cf19 if} (ascii == 46 && longitud == 0) \{\par
238                     {\cf19 continue};\par
239                 \}\par
240 \par
241                 {\cf19 if} (ascii == 45 && longitud != 0) \{\par
242                     {\cf19 continue};\par
243                 \}\par
244 \par
245                 resultado.push_back({\cf17 static_cast<}{\cf18 char}{\cf17 >}(ascii));\par
246                 longitud++;\par
247                 std::cout << static_cast<char>(ascii);\par
248             \}\par
249         \}\par
250 \par
251         {\cf19 return} resultado;\par
252     \}\par
253 \par
254     {\cf17 static} {\cf17 inline} {\cf18 int} leer_entero(std::string mensaje, {\cf18 int} minimo = INT_MIN, {\cf18 int} maximo = INT_MAX) \{\par
255         {\cf18 int} leido;\par
256 \par
257         {\cf19 do} \{\par
258             std::string input = recortar(leerCadenaNumerica(mensaje));\par
259 \par
260             {\cf19 if} (input.empty()) {\cf19 continue};\par
261 \par
262             leido = convertirEnEntero(input);\par
263             std::cout << std::endl;\par
264         \} {\cf19 while} (leido < minimo || leido > maximo);\par
265 \par
266         {\cf19 return} leido;\par
267     \}\par
268 \par
269     {\cf17 static} {\cf17 inline} {\cf18 float} leer_flotante(std::string mensaje, {\cf18 float} minimo = FLT_MIN, {\cf18 float} maximo = FLT_MAX) \{\par
270         {\cf18 float} leido;\par
271 \par
272         {\cf19 do} \{\par
273             std::string entrada = recortar(leerCadenaNumerica(mensaje));\par
274 \par
275             {\cf19 if} (entrada.empty()) {\cf19 continue};\par
276 \par
277             leido = convertirEnReal(entrada);\par
278             std::cout << std::endl;\par
279         \} {\cf19 while} (leido < minimo || leido > maximo);\par
280 \par
281         {\cf19 return} leido;\par
282     \}\par
283 \par
284     {\cf17 static} {\cf18 bool} cedula_valida({\cf17 const} std::string cedula) \{\par
285         {\cf19 if} (cedula.length() != 10) \{\par
286             {\cf19 return} {\cf17 false};\par
287         \}\par
288 \par
289         {\cf18 int} sum_par = 0;\par
290         {\cf18 int} sum_impar = 0;\par
291         {\cf18 int} sum;\par
292         {\cf18 int} i = 1;\par
293 \par
294         std::string digits = cedula.substr(0, cedula.size() - 1);\par
295 \par
296         {\cf19 for} ({\cf18 char}& c : digits) \{\par
297             {\cf18 int} digit = c - {\cf23 '0'};\par
298             {\cf19 if} (i % 2 == 0) \{\par
299                 sum_par += digit;\par
300             \}\par
301             {\cf19 else} \{\par
302                 {\cf19 if} ((digit * 2) > 9) \{\par
303                     sum_impar += (digit * 2) - 9;\par
304                 \}\par
305                 {\cf19 else} \{\par
306                     sum_impar += (digit * 2);\par
307                 \}\par
308             \}\par
309             i++;\par
310         \}\par
311 \par
312         sum = sum_par + sum_impar;\par
313 \par
314         {\cf18 int} verificador = cedula.at(cedula.size() - 1) - {\cf23 '0'};\par
315         {\cf18 int} mAlto = (10 - (sum % 10)) + sum;\par
316 \par
317         {\cf19 if} (sum % 10 == 0) \{\par
318             {\cf19 return} verificador == 0;\par
319         \}\par
320 \par
321         {\cf19 return} (mAlto - sum) == verificador;\par
322     \}\par
323 \par
324     {\cf17 static} {\cf17 inline} {\cf18 bool} email_valido(std::string email) \{\par
325         std::regex patron({\cf22 "^[a-zA-Z0-9.!#$%&'*+/=?^_`\{|\}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]\{0,61\}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]\{0,61\}[a-zA-Z0-9])?)*$"});\par
326         {\cf19 return} std::regex_match(email, patron);\par
327     \}\par
328 \par
329     {\cf17 static} std::string leer_con_formato(std::string mensaje, std::string formato) \{\par
330         std::string salida;\par
331         {\cf18 bool} invalido;\par
332         \par
333         {\cf19 do} \{\par
334             std::cout << mensaje;\par
335             std::getline(std::cin, salida);\par
336             salida = recortar_cadena(salida);\par
337             invalido = !std::regex_match(salida, std::regex(formato));\par
338 \par
339             {\cf19 if} (invalido) \{\par
340                 std::cout << {\cf22 "\\n[Formato invalido]"} << std::endl;\par
341             \}\par
342         \} {\cf19 while} (invalido);\par
343 \par
344         {\cf19 return} salida;\par
345     \}\par
346 \par
347     {\cf17 static} std::string leer_cadena(std::string mensaje) \{\par
348         std::string salida;\par
349 \par
350         {\cf19 do} \{\par
351             std::cout << mensaje;\par
352             std::getline(std::cin, salida);\par
353             salida = recortar_cadena(salida);\par
354         \} {\cf19 while} (salida.empty());\par
355 \par
356         {\cf19 return} salida;\par
357     \}\par
358 \par
359     {\cf17 static} std::string recortar_cadena(std::string str) \{\par
360         std::string salida(str);\par
361         std::string::size_type pos = salida.find_first_not_of({\cf23 ' '});\par
362         \par
363         {\cf19 if} (pos != std::string::npos) \{\par
364             salida.erase(0, pos);\par
365         \}\par
366 \par
367         pos = salida.find_last_not_of({\cf23 ' '});\par
368         \par
369         {\cf19 if} (pos != std::string::npos) \{\par
370             salida.erase(pos + 1);\par
371         \}\par
372 \par
373         {\cf19 return} salida;\par
374     \}\par
375 \par
376     {\cf17 static} std::vector<std::vector<std::string>> leer_archivo_datos(std::string archivo) \{\par
377         std::ifstream documento(archivo);\par
378         std::string linea;\par
379         std::vector<std::vector<std::string>> resultado;\par
380         \par
381         {\cf19 while} (std::getline(documento, linea)) \{\par
382             std::istringstream ss(linea);\par
383             std::string fich;\par
384             std::vector<std::string> columnas;\par
385             \par
386             {\cf19 while} (std::getline(ss, fich, {\cf23 ','})) \{\par
387                 columnas.push_back(fich);\par
388             \}\par
389 \par
390             resultado.push_back(columnas);\par
391         \}\par
392 \par
393         {\cf19 return} resultado;\par
394     \}\par
395 \par
396     {\cf17 static} {\cf18 void} guardar_archivo_datos(std::string archivo, std::vector<std::string> lineas, {\cf18 bool} sobreescribir = {\cf17 true}) \{\par
397         std::ofstream documento(archivo, sobreescribir ? std::ios::trunc : std::ios::app);\par
398         \par
399         {\cf19 for} (std::string linea : lineas) \{\par
400             documento << linea << std::endl;\par
401         \}\par
402         \par
403         std::string linea;\par
404     \}\par
405 \par
406     {\cf17 static} {\cf17 inline} {\cf18 void} mostrar_archivo(std::string archivo) \{\par
407         std::ifstream documento(archivo);\par
408         std::string linea;\par
409 \par
410         {\cf19 while} (std::getline(documento, linea)) \{\par
411             std::cout << linea << std::endl;\par
412         \}\par
413 \par
414         documento.close();\par
415     \}\par
416 \};\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par 
\pard\plain 
{\tc \v \'CDndice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
